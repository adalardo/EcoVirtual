library("Rcmdr")
library("RcmdrPlugin.EcoVirtual")
detach("package:Rcmdr")
detach("package:RcmdrPlugin.EcoVirtual")
detach("package:EcoVirtual")
meta.er <-function(tf,cl,ln,fi,pc,e)
{
nmanchas=cl*ln
paisag=array(0,dim=c(ln,cl,tf))
paisag[,,1]=matrix(sample(c(1,0),nmanchas,prob=c(fi,1-fi), replace=TRUE),ln,cl)
resultado=numeric()
res=numeric()
for(tc in 2:tf)
{
pe=e*(1-sum(paisag[,,tc-1])/nmanchas)
paisag[,,tc][paisag[,,(tc-1)]==1]<-sample(c(0,1),sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(pe,1-pe))
paisag[,,tc][paisag[,,(tc-1)]==0]<-sample(c(0,1),cl*ln-sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(1-pc,pc))
resultado[tc-1]=sum(paisag[,,tc])/nmanchas
res[tc-1]=pe
}
x11()
meta.anima2(paisag)
#x11()
graf.fim(paisag)
x11()
F=pc/e
plot(1:tf,c(fi,resultado),type="l",xlab="Time",ylab="Proportion of occupancy", ylim=c	(0,1),main=paste("Propagulus Rain and Rescue Effect","\n cols=",cl," rows=",ln," fi=",fi," pc=",pc," e=",e),font.lab=2,lwd=2)
abline(h=F,col=2,lwd=2,lty=2) # equilibrio F
points(1:tf,c(e*(1-fi),res),type='l',lwd=2,col="blue") # pe observado
abline(h=e-pc,col="green",lwd=2,lty=2) # pe equilibrio
legend("topright", legend=c("proportion of occupancy", "equilibrium F", "extintion probability(pe)", "pe equilibrium"), lty=c(1,2,1,2), col=c("black","red","blue", "green"), bty="n")
return(paisag)
}
meta.er(100,20,20,0.25,0.1,0.05)
meta.anima2=function(dados)
{
nsim=dim(dados)[3]
ln=dim(dados)[1]
cl=dim(dados)[2]
image(0:ln, 0:cl, dados[,,1], col=c("white", "green") , breaks=c(0,0.99,5),main="Metapopulation Dynamics", sub=paste("Initial configuration from", nsim," simulations",  sep=""), xlab="", ylab="")
grid(ln,cl)
Sys.sleep(.5)
conta12=dados[,,1]+ (2*dados[,,2])
image(0:ln, 0:cl, conta12, col=c("white","red","lightgreen", "darkgreen") , breaks=c(0,0.9,1.9,2.9,3.9),main="Metapopulation Dynamics", sub=paste("red= extintion; light green= colonization; dark green = permanence \n maximum time = ", nsim, sep=""), xlab="", ylab="")
for(i in 3:nsim)
{
conta12=dados[,,(i-1)]+ (2*dados[,,i])
image(0:ln, 0:cl, conta12, col=c("white","red","lightgreen", "darkgreen") , breaks=c(0,0.9,1.9,2.9,3.9), xlab="", ylab="", add=TRUE)
Sys.sleep(.1)
}
}
meta.er(100,20,20,0.25,0.1,0.05)
graf.fim=function(dados)
{
op=par(mfrow=c(2,2))
nsim=dim(dados)[3]
ln=dim(dados)[1]
cl=dim(dados)[2]
image(0:ln, 0:cl, dados[,,1], col=c("white", "green") , breaks=c(0,0.99,5),main="Metapopulation Dynamics", sub=paste("time = 1/", nsim, sep=""), xlab="", ylab="")
grid(ln,cl)
for(ts in c(4,2,1))
{
sim=round(nsim/ts)
conta12=dados[,,(sim-1)]+ (2*dados[,,sim])
image(0:ln, 0:cl, conta12, col=c("white","red","lightgreen", "darkgreen") , breaks=c(0,0.9,1.9,2.9,3.9),main="Metapopulation Dynamics", sub=paste("red= extintion; light green= colonization;\n dark green = permanence \t time = ", sim, "/", nsim, sep=""), xlab="", ylab="")
#	Sys.sleep(.5)
}
par(op)
}
meta.er(100,20,20,0.25,0.1,0.05)
meta.er <-function(tf,cl,ln,fi,pc,e)
{
nmanchas=cl*ln
paisag=array(0,dim=c(ln,cl,tf))
paisag[,,1]=matrix(sample(c(1,0),nmanchas,prob=c(fi,1-fi), replace=TRUE),ln,cl)
resultado=numeric()
res=numeric()
for(tc in 2:tf)
{
pe=e*(1-sum(paisag[,,tc-1])/nmanchas)
paisag[,,tc][paisag[,,(tc-1)]==1]<-sample(c(0,1),sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(pe,1-pe))
paisag[,,tc][paisag[,,(tc-1)]==0]<-sample(c(0,1),cl*ln-sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(1-pc,pc))
resultado[tc-1]=sum(paisag[,,tc])/nmanchas
res[tc-1]=pe
}
x11()
meta.anima2(paisag)
#x11()
graf.fim(paisag)
x11()
F=pc/e
if(F>1){F=1}
plot(1:tf,c(fi,resultado),type="l",xlab="Time",ylab="Proportion of occupancy", ylim=c(0,1),main=paste("Propagulus Rain and Rescue Effect","\n cols=",cl," rows=",ln," fi=",fi," pc=",pc," e=",e),font.lab=2,lwd=2)
abline(h=F,col=2,lwd=2,lty=2) # equilibrio F
points(1:tf,c(e*(1-fi),res),type='l',lwd=2,col="blue") # pe observado
abline(h=e-pc,col="green",lwd=2,lty=2) # pe equilibrio
legend("topright", legend=c("proportion of occupancy", "equilibrium F", "extintion probability(pe)", "pe equilibrium"), lty=c(1,2,1,2), col=c("black","red","blue", "green"), bty="n")
return(paisag)
}
meta.er(100,20,20,0.25,0.1,0.05)
meta.er <-function(tf,cl,ln,fi,pc,e)
{
nmanchas=cl*ln
paisag=array(0,dim=c(ln,cl,tf))
paisag[,,1]=matrix(sample(c(1,0),nmanchas,prob=c(fi,1-fi), replace=TRUE),ln,cl)
resultado=numeric()
res=numeric()
for(tc in 2:tf)
{
pe=e*(1-sum(paisag[,,tc-1])/nmanchas)
paisag[,,tc][paisag[,,(tc-1)]==1]<-sample(c(0,1),sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(pe,1-pe))
paisag[,,tc][paisag[,,(tc-1)]==0]<-sample(c(0,1),cl*ln-sum(paisag[,,(tc-1)]), replace=TRUE, prob=c(1-pc,pc))
resultado[tc-1]=sum(paisag[,,tc])/nmanchas
res[tc-1]=pe
}
x11()
meta.anima2(paisag)
#x11()
graf.fim(paisag)
x11()
F=pc/e
if(F>1){F=1}
pe.eq=e-pc
if(pe.eq<0){pe.eq=0}
plot(1:tf,c(fi,resultado),type="l",xlab="Time",ylab="Proportion of occupancy", ylim=c(0,1),main=paste("Propagulus Rain and Rescue Effect","\n cols=",cl," rows=",ln," fi=",fi," pc=",pc," e=",e),font.lab=2,lwd=2)
abline(h=F,col=2,lwd=2,lty=2) # equilibrio F
points(1:tf,c(e*(1-fi),res),type='l',lwd=2,col="blue") # pe observado
abline(h=pe.eq,col="green",lwd=2,lty=2) # pe equilibrio
legend("topright", legend=c("proportion of occupancy", "equilibrium F", "extintion probability(pe)", "pe equilibrium"), lty=c(1,2,1,2), col=c("black","red","blue", "green"), bty="n")
return(paisag)
}
meta.er(100,20,20,0.25,0.1,0.05)
meta.er=function(tf,cl,ln,fi,pc,e){
paisag=array(0,dim=c(ln,cl,tf))
paisag[,,1]=matrix(sample(c(1,0),cl*ln,prob=c(fi,1-fi), replace=T),ln,cl)
resultado=numeric()
res=numeric()
for(t in 2:tf){
pe=e*(1-sum(paisag[,,t-1])/(cl*ln))
paisag[,,t][paisag[,,(t-1)]==1]<-sample(c(0,1),sum(paisag[,,(t-1)]), replace=T, prob=c(pe,1-pe))
paisag[,,t][paisag[,,(t-1)]==0]<-sample(c(0,1),cl*ln-sum(paisag[,,(t-1)]), replace=T, prob=c(1-pc,pc))
resultado[t-1]=sum(paisag[,,t])/(cl*ln)
res[t-1]=pe
}
F=pc/e
if(F>1){F=1}
pe.eq=e-pc
if(pe.eq<0){pe.eq=0}
plot(1:tf,c(fi,resultado),type="l",xlab="Tempo",ylab="Fração de manchas ocupadas",
ylim=c(0,1),main=paste("Chuva de Propágulos com Efeito Resgate",
"\n cl=",cl," ln=",ln," fi=",fi," pc=",pc," e=",e),
font.lab=2,lwd=2)
abline(h=F,col=2,lwd=2,lty=2) # equilibrio F
points(1:tf,c(e*(1-fi),res),type='l',lwd=2,col="blue") # pe observado
abline(h=pe.eq,col="green",lwd=2,lty=2) # pe equilibrio
legend("topright", legend=c("proporção ocupada", "equilíbrio F", "prob. extinção (pe)", "equilíbrio pe"), lty=c(1,2,1,2), col=c("black","red","blue", "green"), bty="n")
return(paisag)
}
meta.er(100,20,20,0.25,0.1,0.05)
library("EcoVirtual")
library("RcmdrPlugin.EcoVirtual")
detach("package:Rcmdr")
